Getting started with a test instance of the DC/OS {{ model.techName }} service is straightforward.

## Prerequisites

- Depending on your security mode in Enterprise DC/OS, you may [need to provision a service account]({{ model.install.serviceAccountInstructionsUrl }}) before installing. Only someone with `superuser` permission can create the service account.
	- `strict` [security mode](/latest/security/ent/#security-modes) requires a service account.
	- `permissive` security mode a service account is optional.
	- `disabled` security mode does not require a service account.
- Your cluster must have at least {{ model.install.minNodeCount }} private nodes.
{{ model.install.customRequirements }}

## Install

To start a basic test cluster {{ model.install.nodeDescription }}, run the following command on the DC/OS CLI. Enterprise DC/OS users may need to follow [additional instructions]({{ model.install.serviceAccountInstructionsUrl }}), depending on the security mode of the Enterprise DC/OS cluster.

```bash
$ dcos package install {{ model.packageName }}
```

This command creates a new instance with the default name `{{ model.serviceName }}`. Two instances cannot share the same name, so installing additional instances beyond the default instance requires customizing the `name` at install time for each additional instance.

All `dcos {{ model.packageName }}` CLI commands have a `--name` argument allowing the user to specify which instance to query. If you do not specify a service name, the CLI assumes a default value matching the package name, i.e. `{{ model.packageName }}`. The default value for `--name` can be customized via the DC/OS CLI configuration:

```bash
$ dcos {{ model.packageName }} --name={{ model.serviceName }} <cmd>
```

**Note:** Alternatively, you can [install from the DC/OS web interface](/latest/deploying-services/install/#installing-a-service-using-the-gui). If you install {{ model.techName }} from the DC/OS web interface, the `dcos {{ model.packageName }}` CLI commands are not automatically installed to your workstation. They may be manually installed using the DC/OS CLI:

```bash
dcos package install {{ model.packageName }} --cli
```

After running the `package install` command, the service will begin installing.

## Service Deployment

To monitor the deployment of your test instance, install the package cli (see command above) and run the command
```bash
dcos {{ model.packageName }} plan show deploy
```

Once the deploy plan has a status of `Complete`, the service is fully deployed.

## Service Discovery

To connect a client, query the service for its endpoints.
```bash
dcos {{ model.packageName }} endpoints
```

Select an endpoint from the list to see the available connections.
```bash
dcos {{ model.packageName }} endpoints <endpoint>
```

## Working with the Service

Using the endpoint information, you can connect a client to the service from within the DC/OS cluster (e.g., a Marathon app running a client application). See the other sections of the documentation for more details on configuration, operation, and service capabilities.
